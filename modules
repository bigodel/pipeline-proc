A MIPS monocycle processor in SystemC typically consists of the following
modules:

- [X] Instruction Memory (IM): It stores the instructions to be executed by the
  processor.

- [X] Register File (RF): It stores the general-purpose registers and provides
  read and write access to them.

- [X] ALU (Arithmetic Logic Unit): It performs arithmetic and logical operations
  on data.

- [X] Data Memory (DM): It stores data used by the program and provides read and
  write access to it.

- [ ] Control Unit (CU): It generates control signals based on the current
  instruction being executed.

- [X] Sign Extension Unit (SE): It sign-extends the immediate value of the
  current instruction to 32 bits.

- [ ] Shift Left 2 Unit (SL2): It shifts the immediate value of the current
  instruction left by 2 bits to create the memory address.

- [X] Program Counter (PC): It stores the address of the current instruction
  being executed and updates it to the address of the next instruction.

- [X] Multiplexer (MUX): It selects between different sources of input data
  based on control signals.

- [X] Adder: It performs arithmetic addition of two numbers.

Instruction types:

R-type Instructions

|  31-26 | 25-21 | 20-16 | 15-11 |  10-6 |   5-0 |
|--------+-------+-------+-------+-------+-------|
| opcode |    rs |    rt |    rd | shamt | funct |

I-type Instructions

|  31-26 | 25-21 | 20-16 | 15-0 |
|--------+-------+-------+------|
| opcode |    rs |    rt |  imm |

J-type Instructions

|  31-26 | 25-0 |
|--------+------|
| opcode | addr |

add 2 1 1    => $1  ($2 + $1 = 3)
sub 3 1 2    => $2  ($3 + $1 = 0)
cmp 1 3 15   => $15 (0)
not 15 5     => $5  (1)
ld 15 3 28   => $3  (2800)
sub 28 3 3   => $3  (-2772)
st 2 5 2     => $4  (5)
ld 5 8 4     => $8  (9)
or 5 7 6     => $7  (6)

ld 1 0 2 ---> $0 = mem[$1 + 2]
st 1 0 2 ---> mem[$1 + 2] = $0